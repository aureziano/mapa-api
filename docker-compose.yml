services:
  frontend:
    container_name: frontend
    build:
      context: ./map-front
      dockerfile: Dockerfile
    env_file: .env  
    ports:
      - "${FRONTEND_PORT}:80"
    networks:
      - app-network
    depends_on:
      backend:
        condition: service_healthy

  backend:
    container_name: backend
    build:
      context: ./map-app
      dockerfile: Dockerfile
    env_file: .env
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_PORT=${MYSQL_PORT}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MONGODB_HOST=${MONGODB_HOST}
      - MONGODB_PORT=${MONGODB_PORT}
      - MONGODB_USERNAME=${MONGODB_USERNAME}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
      - BACKEND_PORT=${BACKEND_PORT}
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    networks:
      - app-network
    depends_on:
      mysql:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8086/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3


  mysql:
    image: mysql:8.0.36
    container_name: mysql-3311
    env_file: .env
    command:
      [
        "--lower_case_table_names=1",
        "--max-allowed-packet=128M",
        "--innodb-log-file-size=64M",
        "--character-set-server=utf8mb4",
        "--collation-server=utf8mb4_unicode_ci",
        "--bind-address=0.0.0.0"
      ]
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - app-network
    volumes:
      - mysql_data:/var/lib/mysql
      - ./map-app/sql:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-uroot", "-p${MYSQL_ROOT_PASSWORD}", "-h", "127.0.0.1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 180s

  mongodb:
    container_name: mongo-27018
    image: mongo:6.0
    env_file: .env
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD}
    volumes:
      - mongodb_data:/data/db
      - ./map-app/mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./map-app/mongo/areasdb.areaEstado.json:/docker-entrypoint-initdb.d/areasdb.areaEstado.json:ro
    command: ["mongod", "--auth"]
    ports:
      - "${MONGODB_PORT}:27017"
    networks:
      - app-network
    healthcheck:
      test: mongosh --eval 'db.runCommand({connectionStatus:1})' --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 180s




volumes:
  mysql_data:
  mongodb_data:

networks:
  app-network:
    driver: bridge
